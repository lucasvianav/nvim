---@meta _

---@enum AutocmdEvent
local _ = {
  BufAdd = "BufAdd", -- After adding/renaming a buffer to the buffer list, before BufEnter
  BufDelete = "BufDelete", -- Before deleting/renaming a buffer from the buffer list
  BufEnter = "BufEnter", -- After entering a buffer, useful for setting filetype options
  BufFilePost = "BufFilePost", -- After changing buffer name with :file or :saveas
  BufFilePre = "BufFilePre", -- Before changing buffer name with :file or :saveas
  BufHidden = "BufHidden", -- Before a buffer becomes hidden
  BufLeave = "BufLeave", -- Before leaving to another buffer or closing window
  BufModifiedSet = "BufModifiedSet", -- After buffer"s "modified" value changes
  BufNew = "BufNew", -- After creating/renaming a new buffer
  BufNewFile = "BufNewFile", -- When editing a non-existent file
  BufRead = "BufRead", -- After reading a file into a buffer, before modelines
  BufReadCmd = "BufReadCmd", -- Before editing a new buffer, should read file
  BufReadPre = "BufReadPre", -- Before reading a file into a buffer
  BufUnload = "BufUnload", -- Before unloading a buffer"s text
  BufWinEnter = "BufWinEnter", -- After a buffer is displayed in a window
  BufWinLeave = "BufWinLeave", -- Before a buffer is removed from a window
  BufWipeout = "BufWipeout", -- Before completely deleting a buffer
  BufWrite = "BufWrite", -- Before writing the whole buffer to a file
  BufWriteCmd = "BufWriteCmd", -- Before writing the whole buffer, should write file
  BufWritePost = "BufWritePost", -- After writing the whole buffer to a file
  ChanInfo = "ChanInfo", -- After channel state changes
  ChanOpen = "ChanOpen", -- After a channel is opened
  CmdUndefined = "CmdUndefined", -- When an undefined user command is used
  CmdlineChanged = "CmdlineChanged", -- After a change to the command-line text
  CmdlineEnter = "CmdlineEnter", -- After entering the command-line
  CmdlineLeave = "CmdlineLeave", -- Before leaving the command-line
  CmdwinEnter = "CmdwinEnter", -- After entering the command-line window
  CmdwinLeave = "CmdwinLeave", -- Before leaving the command-line window
  ColorScheme = "ColorScheme", -- After loading a color scheme
  ColorSchemePre = "ColorSchemePre", -- Before loading a color scheme
  CompleteChanged = "CompleteChanged", -- After Insert mode completion menu changes
  CompleteDonePre = "CompleteDonePre", -- After Insert mode completion is done
  CompleteDone = "CompleteDone", -- After Insert mode completion is finished
  CursorHold = "CursorHold", -- When no key is pressed for "updatetime" in Normal mode
  CursorHoldI = "CursorHoldI", -- Like CursorHold, but in Insert mode
  CursorMoved = "CursorMoved", -- After cursor moves in Normal/Visual mode or text changes
  CursorMovedC = "CursorMovedC", -- After cursor moves in command-line
  CursorMovedI = "CursorMovedI", -- After cursor moves in Insert mode
  DiffUpdated = "DiffUpdated", -- After diffs are updated
  DirChanged = "DirChanged", -- After the current directory changes
  DirChangedPre = "DirChangedPre", -- Before the current directory changes
  ExitPre = "ExitPre", -- Before exiting Vim with :quit, :wq, or :qall
  FileAppendCmd = "FileAppendCmd", -- Before appending to a file
  FileAppendPost = "FileAppendPost", -- After appending to a file
  FileAppendPre = "FileAppendPre", -- Before appending to a file
  FileChangedRO = "FileChangedRO", -- Before changing a read-only file
  FileChangedShell = "FileChangedShell", -- When file modification time/attributes change
  FileChangedShellPost = "FileChangedShellPost", -- After handling external file changes
  FileReadCmd = "FileReadCmd", -- Before reading a file with :read
  FileReadPost = "FileReadPost", -- After reading a file with :read
  FileReadPre = "FileReadPre", -- Before reading a file with :read
  FileType = "FileType", -- After setting the "filetype" option
  FileWriteCmd = "FileWriteCmd", -- Before writing partial buffer to a file
  FileWritePost = "FileWritePost", -- After writing partial buffer to a file
  FileWritePre = "FileWritePre", -- Before writing partial buffer to a file
  FilterReadPost = "FilterReadPost", -- After reading from a filter command
  FilterReadPre = "FilterReadPre", -- Before reading from a filter command
  FilterWritePost = "FilterWritePost", -- After writing for a filter or diff
  FilterWritePre = "FilterWritePre", -- Before writing for a filter or diff
  FocusGained = "FocusGained", -- When Nvim gains focus
  FocusLost = "FocusLost", -- When Nvim loses focus
  FuncUndefined = "FuncUndefined", -- When an undefined user function is used
  UIEnter = "UIEnter", -- After a UI connects or TUI starts
  UILeave = "UILeave", -- After a UI disconnects or TUI stops
  InsertChange = "InsertChange", -- When typing <Insert> in Insert/Replace mode
  InsertCharPre = "InsertCharPre", -- Before inserting a character in Insert mode
  InsertEnter = "InsertEnter", -- Before starting Insert or Replace mode
  InsertLeavePre = "InsertLeavePre", -- Before leaving Insert mode
  InsertLeave = "InsertLeave", -- After leaving Insert mode
  LspAttach = "LspAttach", -- When LSP client attaches
  LspDetach = "LspDetach", -- When LSP client detaches
  LspNotify = "LspNotify", -- When LSP sends notification
  LspProgress = "LspProgress", -- When LSP reports progress
  LspRequest = "LspRequest", -- When LSP sends request
  LspTokenUpdate = "LspTokenUpdate", -- When LSP token updates
  MenuPopup = "MenuPopup", -- Before showing the popup menu
  ModeChanged = "ModeChanged", -- After changing mode
  OptionSet = "OptionSet", -- After setting an option
  QuickFixCmdPre = "QuickFixCmdPre", -- Before a quickfix command runs
  QuickFixCmdPost = "QuickFixCmdPost", -- After a quickfix command runs
  QuitPre = "QuitPre", -- Before deciding to close window or quit Vim
  RemoteReply = "RemoteReply", -- When a server reply is received
  SearchWrapped = "SearchWrapped", -- After search wraps around document
  RecordingEnter = "RecordingEnter", -- When macro recording starts
  RecordingLeave = "RecordingLeave", -- When macro recording stops
  SafeState = "SafeState", -- When nothing is pending, waiting for input
  SessionLoadPost = "SessionLoadPost", -- After loading a session file
  SessionWritePost = "SessionWritePost", -- After writing a session file
  ShellCmdPost = "ShellCmdPost", -- After executing a shell command
  Signal = "Signal", -- After receiving SIGUSR1 or SIGWINCH
  ShellFilterPost = "ShellFilterPost", -- After executing a shell filter command
  SourcePre = "SourcePre", -- Before sourcing a Vimscript/Lua file
  SourcePost = "SourcePost", -- After sourcing a Vimscript/Lua file
  SourceCmd = "SourceCmd", -- When sourcing a Vimscript/Lua file, must source file
  SpellFileMissing = "SpellFileMissing", -- When spell file can"t be found
  StdinReadPost = "StdinReadPost", -- After reading stdin during startup
  StdinReadPre = "StdinReadPre", -- Before reading stdin during startup
  SwapExists = "SwapExists", -- When a swap file is detected
  Syntax = "Syntax", -- After setting the "syntax" option
  TabEnter = "TabEnter", -- After entering a tab page
  TabLeave = "TabLeave", -- Before leaving a tab page
  TabNew = "TabNew", -- When creating a new tab page
  TabNewEntered = "TabNewEntered", -- After entering a new tab page
  TabClosed = "TabClosed", -- After closing a tab page
  TermOpen = "TermOpen", -- When a terminal job starts
  TermEnter = "TermEnter", -- After entering Terminal-mode
  TermLeave = "TermLeave", -- After leaving Terminal-mode
  TermClose = "TermClose", -- When a terminal job ends
  TermRequest = "TermRequest", -- When terminal child emits OSC/DCS/APC sequence
  TermResponse = "TermResponse", -- When Nvim receives OSC/DCS response
  TextChanged = "TextChanged", -- After text change in Normal mode
  TextChangedI = "TextChangedI", -- After text change in Insert mode
  TextChangedP = "TextChangedP", -- After text change in Insert mode with popup
  TextChangedT = "TextChangedT", -- After text change in Terminal-mode
  TextYankPost = "TextYankPost", -- After yank or delete command
  User = "User", -- Triggered manually with :doautocmd
  VimEnter = "VimEnter", -- After all startup actions
  VimLeave = "VimLeave", -- Before exiting Vim, after writing shada file
  VimLeavePre = "VimLeavePre", -- Before exiting Vim, before writing shada file
  VimResized = "VimResized", -- After Vim window is resized
  VimResume = "VimResume", -- After Nvim resumes from suspend
  VimSuspend = "VimSuspend", -- Before Nvim enters suspend state
  WinClosed = "WinClosed", -- When closing a window
  WinEnter = "WinEnter", -- After entering a window
  WinLeave = "WinLeave", -- Before leaving a window
  WinNew = "WinNew", -- When a new window is created
  WinScrolled = "WinScrolled", -- After a window scrolls or changes size
  WinResized = "WinResized", -- After a window changes size
}

---@class Autocmd
---@field event AutocmdEvent|AutocmdEvent[]
---@field opts? vim.api.keyset.create_autocmd
